df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_violin() +
scale_fill_manual(values = group_colors) +
labs(x = "strain", y = "mean length in seconds") +
ggtitle("mean length of rest bouts")
# Plotting rest bouts
##Bout.plot
combined_df <- data.frame(cbind(yp.rest$total, sr.rest$total, wtbs.rest$total))
colnames(combined_df) <- c("yellow plakat", "superRed", "WT")
group_colors <- c("yellow plakat" = "yellow", "superRed" = "red", "WT" = "green")
df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_violin() +
scale_fill_manual(values = group_colors) +
labs(x = "strain", y = "Hours of rest") +
ggtitle("Hours of rest per day")
# Plotting rest bouts
##Bout.plot
combined_df <- data.frame(cbind(yp.rest$total, sr.rest$total, wtbs.rest$total))
colnames(combined_df) <- c("yellow plakat", "superRed", "WT")
group_colors <- c("yellow plakat" = "yellow", "superRed" = "red", "WT" = "green")
df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_violin() +
geom_pointrange(aes(ymin = Values-sd, ymax = Values+sd), data = df_long) +
scale_fill_manual(values = group_colors) +
labs(x = "strain", y = "Hours of rest") +
ggtitle("Hours of rest per day")
View(df_long)
# Plotting rest bouts
##Bout.plot
combined_df <- data.frame(cbind(yp.rest$total, sr.rest$total, wtbs.rest$total))
colnames(combined_df) <- c("yellow plakat", "superRed", "WT")
group_colors <- c("yellow plakat" = "yellow", "superRed" = "red", "WT" = "green")
df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_violin() +
geom_pointrange(aes(ymin = Values-sd(df_long$Values[df_long$Group]), ymax = Values+sd(df_long$Values[df_long$Group])), data = df_long) +
scale_fill_manual(values = group_colors) +
labs(x = "strain", y = "Hours of rest") +
ggtitle("Hours of rest per day")
# Plotting rest bouts
##Bout.plot
combined_df <- data.frame(cbind(yp.rest$total, sr.rest$total, wtbs.rest$total))
colnames(combined_df) <- c("yellow plakat", "superRed", "WT")
group_colors <- c("yellow plakat" = "yellow", "superRed" = "red", "WT" = "green")
df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
ggplot(df_long, aes(x = Group, y = Values, fill = NA, color = Group)) +
geom_violin() +
geom_pointrange(aes(ymin = Values-sd(df_long$Values[df_long$Group]), ymax = Values+sd(df_long$Values[df_long$Group])), data = df_long) +
scale_fill_manual(values = group_colors) +
labs(x = "strain", y = "Hours of rest") +
ggtitle("Hours of rest per day")
# Plotting rest bouts
##Bout.plot
combined_df <- data.frame(cbind(yp.rest$total, sr.rest$total, wtbs.rest$total))
colnames(combined_df) <- c("yellow plakat", "superRed", "WT")
group_colors <- c("yellow plakat" = "yellow", "superRed" = "red", "WT" = "green")
df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
ggplot(df_long, aes(x = Group, y = Values, fill = NA, color = group_colors)) +
geom_violin() +
geom_pointrange(aes(ymin = Values-sd(df_long$Values[df_long$Group]), ymax = Values+sd(df_long$Values[df_long$Group])), data = df_long) +
scale_fill_manual(values = group_colors) +
labs(x = "strain", y = "Hours of rest") +
ggtitle("Hours of rest per day")
# Plotting rest bouts
##Bout.plot
combined_df <- data.frame(cbind(yp.rest$total, sr.rest$total, wtbs.rest$total))
colnames(combined_df) <- c("yellow plakat", "superRed", "WT")
group_colors <- c("yellow plakat" = "yellow", "superRed" = "red", "WT" = "green")
df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
ggplot(df_long, aes(x = Group, y = Values, fill = group_colors)) +
geom_violin() +
scale_fill_manual(values = group_colors) +
labs(x = "strain", y = "Hours of rest") +
ggtitle("Hours of rest per day")
# Plotting rest bouts
##Bout.plot
combined_df <- data.frame(cbind(yp.rest$total, sr.rest$total, wtbs.rest$total))
colnames(combined_df) <- c("yellow plakat", "superRed", "WT")
group_colors <- c("yellow plakat" = "yellow", "superRed" = "red", "WT" = "green")
df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
ggplot(df_long, aes(x = Group, y = Values, color = Group)) +
geom_violin() +
scale_fill_manual(values = group_colors) +
labs(x = "strain", y = "Hours of rest") +
ggtitle("Hours of rest per day")
# Plotting rest bouts
##Bout.plot
combined_df <- data.frame(cbind(yp.rest$total, sr.rest$total, wtbs.rest$total))
colnames(combined_df) <- c("yellow plakat", "superRed", "WT")
group_colors <- c("yellow plakat" = "yellow", "superRed" = "red", "WT" = "green")
df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_violin() +
scale_fill_manual(values = group_colors) +
labs(x = "strain", y = "Hours of rest") +
ggtitle("Hours of rest per day")
ggplot(df_long, aes(Group, Values)) +
geom_col(data = df_long, fill = NA, color = "black") +
geom_jitter( position = position_jitter(0.2), color = "black") +
ggplot(df_long, aes(Group, Values)) +
geom_col(data = df_long, fill = NA, color = "black") +
geom_jitter( position = position_jitter(0.2), color = "black")
ggplot(df_long, aes(Group, Values)) +
geom_col(data = df_long, fill = NA, color = "black") +
geom_jitter( position = position_jitter(0.2), color = "black")
ggplot(df_long, aes(Group, Values)) +
geom_col(data = mean(df_long), fill = NA, color = "black") +
geom_jitter( position = position_jitter(0.2), color = "black")
# Plotting rest bouts
##Bout.plot
combined_df <- data.frame(cbind(yp.rest$total, sr.rest$total, wtbs.rest$total))
colnames(combined_df) <- c("yellow plakat", "superRed", "WT")
group_colors <- c("yellow plakat" = "yellow", "superRed" = "red", "WT" = "green")
df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
summary_df <- df_long %>%
group_by(Group) %>%
summarize(Mean = mean(Values),
SE = sd(Values) / sqrt(length(Values)))
View(sr.act)
library(dplyr)
summary_df <- df_long %>%
group_by(Group) %>%
summarize(Mean = mean(Values),
SE = sd(Values) / sqrt(length(Values)))
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge", color = "black") +
geom_jitter(position = position_dodge(width = 0.9), width = 0.2) +
geom_errorbar(data = summary_df, aes(ymin = Mean - SE, ymax = Mean + SE),
width = 0.2, position = position_dodge(width = 0.9), color = "black") +
labs(x = "Group", y = "Values") +
ggtitle("Grouped Bar Plot with Jitter and Error Bars")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge", color = "black") +
geom_jitter(position = position_dodge(width = 0.9)) +
geom_errorbar(data = summary_df, aes(ymin = Mean - SE, ymax = Mean + SE),
width = 0.2, position = position_dodge(width = 0.9), color = "black") +
labs(x = "Group", y = "Values") +
ggtitle("Grouped Bar Plot with Jitter and Error Bars")
View(summary_df)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge", color = "black") +
geom_jitter(position = position_dodge(width = 0.9)) +
geom_errorbar(data = summary_df, aes(ymin = Mean - SE, ymax = Mean + SE),
width = 0.2, position = position_dodge(width = 0.9), color = "black") +
labs(x = "Group", y = "Values") +
ggtitle("Grouped Bar Plot with Jitter and Error Bars")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge", color = "black") +
geom_jitter(position = position_dodge(width = 0.9)) +
geom_errorbar(data = summary_df, aes(ymin = (Mean - SE), ymax = (Mean + SE)),
width = 0.2, position = position_dodge(width = 0.9), color = "black") +
labs(x = "Group", y = "Values") +
ggtitle("Grouped Bar Plot with Jitter and Error Bars")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge", color = "black") +
geom_jitter(position = position_dodge(width = 0.9)) +
#geom_errorbar(data = summary_df, aes(ymin = (Mean - SE), ymax = (Mean + SE)),
#              width = 0.2, position = position_dodge(width = 0.9), color = "black") +
labs(x = "Group", y = "Values") +
ggtitle("Grouped Bar Plot with Jitter and Error Bars")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge", color = group_colors) +
geom_jitter(position = position_dodge(width = 0.9)) +
#geom_errorbar(data = summary_df, aes(ymin = (Mean - SE), ymax = (Mean + SE)),
#              width = 0.2, position = position_dodge(width = 0.9), color = "black") +
labs(x = "Group", y = "Values") +
ggtitle("Grouped Bar Plot with Jitter and Error Bars")
group_colors <- c("superRed" = "red", "WT" = "green", "yellow plakat" = "yellow")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge", color = group_colors, fill = NA) +
geom_jitter(position = position_dodge(width = 0.9)) +
#geom_errorbar(data = summary_df, aes(ymin = (Mean - SE), ymax = (Mean + SE)),
#              width = 0.2, position = position_dodge(width = 0.9), color = "black") +
labs(x = "Group", y = "Values") +
ggtitle("Grouped Bar Plot with Jitter and Error Bars")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge", color = group_colors, fill = group_colors) +
geom_jitter(position = position_dodge(width = 0.9)) +
#geom_errorbar(data = summary_df, aes(ymin = (Mean - SE), ymax = (Mean + SE)),
#              width = 0.2, position = position_dodge(width = 0.9), color = "black") +
labs(x = "Group", y = "Values") +
ggtitle("Grouped Bar Plot with Jitter and Error Bars")
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge", color = group_colors, fill = group_colors) +
geom_jitter(position = position_dodge(width = 0.9)) +
#geom_errorbar(data = summary_df, aes(ymin = (Mean - SE), ymax = (Mean + SE)),
#              width = 0.2, position = position_dodge(width = 0.9), color = "black") +
labs(x = "Strain", y = "Hours of sleep") +
ggtitle("Hours of rest per day")
# Plotting rest bouts
##Bout.plot
combined_df <- data.frame(cbind(yp.rest$mean, sr.rest$mean, wtbs.rest$mean))
colnames(combined_df) <- c("yellow plakat", "superRed", "WT")
group_colors <- c("superRed" = "red", "WT" = "green", "yellow plakat" = "yellow")
df_long <- tidyr::gather(combined_df, key = "Group", value = "Values")
summary_df <- df_long %>%
group_by(Group) %>%
summarize(Mean = mean(Values),
SE = sd(Values) / sqrt(length(Values)))
ggplot(df_long, aes(x = Group, y = Values, fill = Group)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge", color = group_colors, fill = group_colors) +
geom_jitter(position = position_dodge(width = 0.9)) +
#geom_errorbar(data = summary_df, aes(ymin = (Mean - SE), ymax = (Mean + SE)),
#              width = 0.2, position = position_dodge(width = 0.9), color = "black") +
labs(x = "Strain", y = "mean length in seconds") +
ggtitle("mean length of rest bouts")
View(yp.act)
plot(index, yp.act$activity)
plot(y = yp.act$activity)
plot(x = length(yp.act$activity), y = yp.act$activity)
plot(x = yp.act$activity)
plot(x = yp.act$activity, type = "l")
plot(x = yp.act$activity, type = "l", color = "yellow")
plot(x = yp.act$activity, type = "l", col = "yellow")
plot(x = yp.act$activity, type = "l", col = "#FFD700")
line(x = sr.act$activity, type = "l", col = "#500000")
line(x = sr.act$activity, col = "#500000")
abline(x = sr.act$activity, col = "#500000")
abline(sr.act$activity, col = "#500000")
abline(v = sr.act$activity, col ="#500000")
plot(x = yp.act$activity, type = "l", col = "#FFD700")
abline(v = sr.act$activity, col ="#500000")
abline(a = sr.act$activity, col ="#500000")
abline(b = sr.act$activity, col ="#500000")
abline(untf = sr.act$activity, col ="#500000")
plot(x = yp.act$activity, type = "l", col = "#FFD700")
lines(sr.act$activity, col = "#500000")
lines(wtbs.act$activity, col = "#60aa10")
yp.act <- GetAct(yp.csv, 48, 1)
sr.act <- GetAct(sr.csv, 48, 1)
wtbs.act <- GetAct(wtbs.csv, 48, 1)
plot(x = yp.act$activity, type = "l", col = "#FFD700")
lines(sr.act$activity, col = "#500000")
lines(wtbs.act$activity, col = "#60aa10")
yp.act <- GetAct(yp.csv, 48, 4)
sr.act <- GetAct(sr.csv, 48, 4)
wtbs.act <- GetAct(wtbs.csv, 48, 4)
plot(x = yp.act$activity, type = "h", col = "#FFD700")
lines(sr.act$activity, type = "h", col = "#500000")
lines(wtbs.act$activity, type = "h", col = "#60aa10")
yp.act <- GetAct(yp.csv, 48, 0.0003)
sr.act <- GetAct(sr.csv, 48, 0.0003)
wtbs.act <- GetAct(wtbs.csv, 48, 0.0003)
## TODO measure diurnality and "crepuscularity"
day.night <- data.frame(matrix(NA, ncol = 2, nrow = length(dat[,1])))
colnames(day.night) <- c("time", "movement")
dat <- yp.act
day.night <- data.frame(matrix(NA, ncol = 2, nrow = length(dat[,1])))
View(dat)
View(day.night)
colnames(day.night) <- c("time", "movement")
day.night[,2] <- dat[,1]
day.night[23334:36666,1] <- "crepusculo"
day.night[63334:76666,1] <- "crepusculo"
day.night[103334:116666,1] <- "crepusculo"
day.night[143334:156666,1] <- "crepusculo"
day.night[1:23333,1] <- "day"
day.night[76667:103333,1] <- "day"
day.night[156667:160000,1] <- "day"
day.night[36667:63333,1] <- "night"
day.night[116667:143333,1] <- "night"
summary(day.night)
table(day.night)
count(day.night$time == "crepusculo")
sum(day.night$time == "crepusculo")
sum(day.night$time == "day")
sum(day.night$time == "night")
summary.time <- day.night %>%
group_by(time) %>%
summarize(Mean = mean(movement),
SE = sd(movement) / sqrt(n()))
View(summary.time)
# create summary df
summary.time <- day.night %>%
group_by(time) %>%
summarize(Sum = sum(movement))
ggplot(summary.time, aes(x = time, y = Sum, fill = time)) +
geom_bar(stat = "identity", width = 0.5, position = position_dodge(width = 0.9)) +
labs(x = "time", y = "Total locomotion(px/s)") +
ggtitle("Locomotion for time of day")
# create summary df
summary.time <- day.night %>%
group_by(time) %>%
summarize(Sum = mean(movement))
ggplot(summary.time, aes(x = time, y = Sum, fill = time)) +
geom_bar(stat = "identity", width = 0.5, position = position_dodge(width = 0.9)) +
labs(x = "time", y = "Total locomotion(px/s)") +
ggtitle("Locomotion for time of day")
dat.yp <- yp.act
dat.sr <- sr.act
dat.wtbs <- wtbs.act
yp.act <- GetAct(yp.csv, 48, 1)
sr.act <- GetAct(sr.csv, 48, 1)
wtbs.act <- GetAct(wtbs.csv, 48, 1)
Act.Plot(yp.act, 48, 1)
yp.act <- GetAct(yp.csv, 48, 0.2)
sr.act <- GetAct(sr.csv, 48, 0.2)
wtbs.act <- GetAct(wtbs.csv, 48, 0.2)
yp.dn <- data.frame(matrix(NA, ncol = 2, nrow = length(dat[,1])))
colnames(day.night) <- c("time", "movement")
yp.dn[,2] <- yp.act[,1]
yp.dn[,2] <- yp.act[,1]
yp.act <- GetAct(yp.csv, 48, 0.2)
yp.dn[,2] <- yp.act[,1]
yp.dn <- data.frame(matrix(NA, ncol = 2, nrow = 240))
rm(group_colors)
View(yp.dn)
colnames(yp.dn) <- c("time", "movement")
yp.dn[1:5,1] <- "twilight"
yp.dn[,2] <- yp.act[,1]
yp.dn[6:50,1] <- "day"
yp.dn[51:70,1] <- "twilight"
yp.dn[1:5,1] <- "day"
yp.dn[46:105,1] <- "night"
yp.dn[106:165,1] <- "day"
yp.dn[166:225,1] <- "night"
yp.dn[226:240,1] <- "day"
yp.dn <- data.frame(matrix(NA, ncol = 3, nrow = 240))
colnames(yp.dn) <- c("time", "movement", "strain")
yp.dn[,2] <- yp.act[,1]
yp.dn[1:45,1] <- "day"
yp.dn[46:105,1] <- "night"
yp.dn[106:165,1] <- "day"
yp.dn[166:225,1] <- "night"
yp.dn[226:240,1] <- "day"
yp.dn[,3] <- "YellowPlakat"
sr.dn <- data.frame(matrix(NA, ncol = 3, nrow = 240))
View(sr.dn)
colnames(yp.dn) <- c("time", "movement", "strain")
colnames(sr.dn) <- c("time", "movement", "strain")
sr.dn[,2] <- sr.act[,1]
sr.dn[1:45,1] <- "day"
sr.dn[46:105,1] <- "night"
sr.dn[106:165,1] <- "day"
sr.dn[166:225,1] <- "night"
sr.dn[226:240,1] <- "day"
sr.dn[,3] <- "SuperRed"
wtbs.dn <- data.frame(matrix(NA, ncol = 3, nrow = 240))
colnames(wtbs.dn) <- c("time", "movement", "strain")
wtbs.dn[,2] <- sr.act[,1]
wtbs.dn[1:45,1] <- "day"
wtbs.dn[46:105,1] <- "night"
wtbs.dn[106:165,1] <- "day"
wtbs.dn[166:225,1] <- "night"
wtbs.dn[226:240,1] <- "day"
wtbs.dn[,3] <- "BettaSplendensWT"
View(wtbs.dn)
wtbs.dn[,2] <- wtbs.act[,1]
day.night <- rbind(yp.dn, sr.dn, wtbs.dn)
View(day.night)
wtbs.dnt <- wtbs.dn
yp.dnt <- yp.dn
rs.dnt <- rs.dn
rs.dnt <- sr.dn
View(rs.dnt)
View(wtbs.dnt)
View(yp.dnt)
yp.dn[46:51,1] <- "twilight"
yp.dn[46:105,1] <- "night"
yp.dnt[46:51,1] <- "twilight"
yp.dnt[46:55,1] <- "twilight"
yp.dnt[106:115,1] <- "twilight"
yp.dnt[166:175,1] <- "twilight"
yp.dnt[226:135,1] <- "twilight"
sr.dnt[46:55,1] <- "twilight"
sr.dnt <- rs.dnt
rm(rs.dnt)
sr.dnt[46:55,1] <- "twilight"
sr.dnt[106:115,1] <- "twilight"
sr.dnt[166:175,1] <- "twilight"
sr.dnt[226:135,1] <- "twilight"
View(sr.dnt)
wtbs.dnt[46:55,1] <- "twilight"
wtbs.dnt[106:115,1] <- "twilight"
wtbs.dnt[166:175,1] <- "twilight"
wtbs.dnt[226:135,1] <- "twilight"
twilight <- rbind(yp.dnt, sr.dnt, wtbs.dnt)
write.csv(day.night, "../data/daynight.csv")
write.csv(twilight, "../data/twilight.csv")
View(twilight)
colnames(twilight)
fit <- glm(movement ~ time * strain)
fit <- glm(movement ~ time * strain, data=twilight)
summary(fit)
step(fit)
fit <- glm(movement ~ time + strain, data=twilight)
summary(fit)
View(sr.act)
yp.dnt <- yp.dn
sr.dnt <- sr.dn
wtbs.dnt <- wtbs.dn
yp.dnt[46:55,1] <- "twilight"
yp.dnt[106:115,1] <- "twilight"
yp.dnt[166:175,1] <- "twilight"
yp.dnt[226:235,1] <- "twilight"
sr.dnt[46:55,1] <- "twilight"
sr.dnt[106:115,1] <- "twilight"
sr.dnt[166:175,1] <- "twilight"
sr.dnt[226:235,1] <- "twilight"
wtbs.dnt[46:55,1] <- "twilight"
wtbs.dnt[106:115,1] <- "twilight"
wtbs.dnt[166:175,1] <- "twilight"
wtbs.dnt[226:135,1] <- "twilight"
wtbs.dnt <- wtbs.dn
wtbs.dnt[46:55,1] <- "twilight"
wtbs.dnt[106:115,1] <- "twilight"
wtbs.dnt[166:175,1] <- "twilight"
wtbs.dnt[226:235,1] <- "twilight"
fit <- glm(movement ~ time + strain, data=twilight)
summary(fit)
twilight <- rbind(yp.dnt, sr.dnt, wtbs.dnt)
write.csv(day.night, "../data/daynight.csv")
write.csv(twilight, "../data/twilight.csv")
fit <- glm(movement ~ time + strain, data=twilight)
summary(fit)
minmax <- data.frame(matrix(NA, ncol = 4, nrow = 9))
View(minmax)
colnames(minmax) <- c("min", "max", "time", "strain")
minmax[1,2] <- 2
minmax[1,2] <- NA
View(yp.dnt)
minmax[1,1] <- max(yp.dnt[yp.dnt$time == "day", 2])
minmax[1,1] <- max(yp.dnt[yp.dnt$time == "twiligth", 2])
minmax[1,1] <- max(yp.dnt[yp.dnt$time == "twilight", 2])
minmax[1,1] <- max(yp.dnt[yp.dnt$time == "day", 2])
minmax[1,2] <- max(yp.dnt[yp.dnt$time == "day", 2])
minmax[1,2] <- min(yp.dnt[yp.dnt$time == "day", 2])
minmax[1,2] <- max(yp.dnt[yp.dnt$time == "day", 2])
minmax[1,1] <- min(yp.dnt[yp.dnt$time == "day", 2])
minmax[1,3] <- "day"
minmax[1,4] <- "YellowPlakat"
minmax[1,2] <- max(yp.dnt[yp.dnt$time == "twilight", 2])
minmax[1,2] <- max(yp.dnt[yp.dnt$time == "day", 2])
minmax[2,2] <- max(yp.dnt[yp.dnt$time == "twilight", 2])
minmax[2,1] <- min(yp.dnt[yp.dnt$time == "twilight", 2])
minmax[2,3] <- "twilight"
minmax[2,4] <- "YellowPlakat"
minmax[3,2] <- max(yp.dnt[yp.dnt$time == "night", 2])
minmax[3,1] <- min(yp.dnt[yp.dnt$time == "night", 2])
minmax[3,3] <- "night"
minmax[3,4] <- "YellowPlakat"
minmax[4,2] <- max(sr.dnt[sr.dnt$time == "day", 2])
minmax[4,1] <- min(sr.dnt[sr.dnt$time == "day", 2])
minmax[4,3] <- "day"
minmax[4,4] <- "SuperRed"
minmax[5,2] <- max(sr.dnt[sr.dnt$time == "twilight", 2])
minmax[5,1] <- min(sr.dnt[sr.dnt$time == "twilight", 2])
minmax[5,3] <- "twilight"
minmax[5,4] <- "SuperRed"
minmax[6,2] <- max(sr.dnt[sr.dnt$time == "night", 2])
minmax[6,1] <- min(sr.dnt[sr.dnt$time == "night", 2])
minmax[6,3] <- "night"
minmax[6,4] <- "SuperRed"
minmax[6,2] <- max(wtbs.dnt[wtbs.dnt$time == "day", 2])
minmax[6,1] <- min(wtbs.dnt[wtbs.dnt$time == "day", 2])
minmax[6,3] <- "day"
minmax[6,4] <- "BettaSplendensWT"
minmax[6,2] <- max(sr.dnt[sr.dnt$time == "night", 2])
minmax[6,1] <- min(wtbs.dnt[wtbs.dnt$time == "day", 2])
minmax[6,1] <- min(sr.dnt[sr.dnt$time == "night", 2])
minmax[6,3] <- "night"
minmax[6,4] <- "SuperRed"
minmax[8,2] <- max(wtbs.dnt[wtbs.dnt$time == "twilight", 2])
minmax[8,1] <- min(wtbs.dnt[wtbs.dnt$time == "twilight", 2])
minmax[8,3] <- "twilight"
minmax[8,4] <- "BettaSplendensWT"
minmax[9,2] <- max(wtbs.dnt[wtbs.dnt$time == "night", 2])
minmax[9,1] <- min(wtbs.dnt[wtbs.dnt$time == "night", 2])
minmax[9,3] <- "night"
minmax[9,4] <- "BettaSplendensWT"
minmax[7,2] <- max(wtbs.dnt[wtbs.dnt$time == "day", 2])
minmax[7,1] <- min(wtbs.dnt[wtbs.dnt$time == "day", 2])
minmax[7,3] <- "day"
minmax[7,4] <- "BettaSplendensWT"
crepuscularity <- data.frame(matrix(NA, ncol = 5, nrow = 9))
colnames(minmax) <- c("min", "max", "ratio", "time", "strain")
colnames(crepuscularity) <- c("min", "max", "ratio", "time", "strain")
View(crepuscularity)
crepuscularity[,1] <- minmax[,1]
crepuscularity[,2] <- minmax[,2]
crepuscularity[,4] <- minmax[,3]
crepuscularity[,5] <- minmax[,4]
crepuscularity[,3] <- crepuscularity[,1]/crepuscularity[,2]
crepuscularity[,3] <- crepuscularity[,2]-crepuscularity[,1]
fit.c <- glm(ratio ~ time + strain, data=crepuscularity)
summary(fit)
summary(fit.c)
crepuscularity[,3] <- crepuscularity[,1]/crepuscularity[,2]
fit.c <- glm(ratio ~ time + strain, data=crepuscularity)
summary(fit.c)
View(combined_df)
View(yp.act)
View(fit)
foo <- read.csv("../data/WT-BS-05-06-apr21DLC_dlcrnetms5_yp-wtMay2shuffle1_80000_el.csv)
""
"
foo <- read.csv("../data/WT-BS-05-06-apr21DLC_dlcrnetms5_yp-wtMay2shuffle1_80000_el.csv")
foo <- read.csv("../data/WT-BS-05-06-apr21DLC_dlcrnetms5_yp-wtMay2shuffle1_80000_el.csv", header=T, na.strings=c(""," ","NA"))[-c(1:7),c(2:4,32:34)]
sum(is.na(foo$DLC_dlcrnetms5_yp.wtMay2shuffle1_80000))
sum(is.na(foo$DLC_dlcrnetms5_yp.wtMay2shuffle1_80000))/length(foo$DLC_dlcrnetms5_yp.wtMay2shuffle1_80000)
foo <- read.csv("../data/WT-BS-03-04-apr18DLC_dlcrnetms5_yp-wtMay2shuffle1_80000_el.csv", header=T, na.strings=c(""," ","NA"))[-c(1:7),c(2:4,32:34)]
sum(is.na(foo$DLC_dlcrnetms5_yp.wtMay2shuffle1_80000))/length(foo$DLC_dlcrnetms5_yp.wtMay2shuffle1_80000)
foo <- read.csv("../data/SR-05-06-May30DLC_dlcrnetms5_yp-wtMay2shuffle1_80000_el.csvv", header=T, na.strings=c(""," ","NA"))[-c(1:7),c(2:4,32:34)]
foo <- read.csv("../data/SR-05-06-May30DLC_dlcrnetms5_yp-wtMay2shuffle1_80000_el.csv", header=T, na.strings=c(""," ","NA"))[-c(1:7),c(2:4,32:34)]
sum(is.na(foo$DLC_dlcrnetms5_yp.wtMay2shuffle1_80000))/length(foo$DLC_dlcrnetms5_yp.wtMay2shuffle1_80000)
48
(48*60)*0.024
